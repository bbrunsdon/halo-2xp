(() => {
  // modules/config.js
  var entryData = {
    "contactDetails": {
      "forename": "Master Chief",
      "email": null,
      "addressCountry": "GB",
      "addressPostcode": "MC11 7GG",
      "phoneNumber": "+447900000117"
    },
    "verificationCode": null,
    "recaptchaToken": null,
    "acceptTerms": true,
    "answers": [
      { "questionGuid": "c24798c7-b5b3-11ec-aba4-befa4c95df14", "answerGuid": "9bee3b81-b5bc-11ec-aba4-befa4c95df14" },
      { "questionGuid": "01251ab8-c08d-11ec-97c3-2ea081ad199a", "answerGuid": "474d76c8-c48a-11ec-97c3-2ea081ad199a" }
    ]
  };
  var entryGuidKey = "instantWinEntryGuid_407dd5bb-c08d-11ec-97c3-2ea081ad199a_primary";

  // modules/formatPage.js
  var newPageElements = {};
  function formatPage() {
    console.log("Removing unnecessary page elements...");
    const classesToHide = [
      "input-extra",
      "marketing-preferences",
      "lz-campaign-xbox-age-check",
      "lz-campaign-xbox-terms-and-conditions",
      "button-group",
      "input-label",
      "g-recaptcha",
      "infx-validation-result",
      "infx-error-message"
    ];
    const tagsToHide = [
      "small",
      "input",
      "select"
    ];
    for (const cssClass of classesToHide) {
      elements = document.getElementsByClassName(cssClass);
      for (const element of elements) {
        element.style.display = "none";
      }
    }
    ;
    for (const htmlTag of tagsToHide) {
      elements = document.getElementsByTagName(htmlTag);
      for (const element of elements) {
        element.style.display = "none";
      }
    }
    console.log("Injecting new HTML into page...");
    const pageHeading = document.getElementsByTagName("h4")[0];
    pageHeading.textContent = "Let's make this a bit smoother...";
    const pageFormContainerDiv = document.getElementsByClassName("infx-form-shell")[0];
    const pageRecaptchaContainerDiv = document.getElementsByClassName("g-recaptcha")[0];
    const emailInputHtml = `<div id="emailDivId" class="margin-top">
            <i class="input-extra">The verifiction code is sent here</i>
            <p class="input-label">
                <b>Email address *</b>
            </p>
            <input id="emailInputId" type="text" name="email" autocapitalize="off" placeholder="Enter email address here" class="textbox">
            <span id="emailErrorId" class="infx-validation-result infx-error-message" style="display:none;"></span>
        </div>`;
    const emailButtonHtml = `<div id="emailButtonGroupId" class="button-group" style="margin: 0 auto;">
            <div id="emailButtonId" class="infx-button" style="background-color: #000; border: 1.5px solid #6DDCF2;">
                <button type="button" class="block-link">
                    <span class="button-text" style="color: #6DDCF2;">Verify Email</span>
                    <span class="button-icon"></span>
                </button>
            </div>
        </div>`;
    const veriInputHtml = `<div id="veriDivId" class="margin-top" style="display:none;">
            <p class="input-label">
                <b>Verification code *</b>
            </p>
            <input id="veriInputId" type="text" name="verificationCode" pattern="^[0-9]*$" placeholder="Enter verification code here" maxlength="6" class="textbox"">
        </div>`;
    const recaptchaErrorHtml = `<span id="recaptchaErrorId" class="infx-validation-result infx-error-message" style="display:none;">Complete this pain in the arse first</span>`;
    const prizeButtonHtml = `<div id=prizeButtonDivId class="button-group" style="margin: 0 auto; display:none;">
            <div id="prizeButtonId" class="infx-button" style="background-color: #000; border: 1.5px solid #9bf00b;">
                <button type="button" class="block-link">
                    <span class="button-text" style="color: #9bf00b;">Get your prize!</span>
                    <span class="button-icon"></span>
                </button>
            </div>
        </div>`;
    const refreshButtonHtml = `<div id=refreshButtonDivId class="button-group" style="margin: 0 auto; display:none;">
            <div id="refreshButtonId" class="infx-button" style="background-color: #000; border: 1.5px solid #6DDCF2;">
                <button type="button" class="block-link">
                    <span class="button-text" style="color: #6DDCF2;">Refresh to win again!</span>
                    <span class="button-icon"></span>
                </button>
            </div>
        </div>`;
    pageFormContainerDiv.insertAdjacentHTML("afterbegin", emailInputHtml + emailButtonHtml + veriInputHtml);
    pageFormContainerDiv.insertAdjacentHTML("beforeend", prizeButtonHtml + refreshButtonHtml);
    pageRecaptchaContainerDiv.insertAdjacentHTML("afterend", recaptchaErrorHtml);
    newPageElements.pageHeading = pageHeading;
    newPageElements.pageFormContainerDiv = pageFormContainerDiv;
    newPageElements.emailDiv = document.querySelector("#emailDivId");
    newPageElements.emailInput = document.querySelector("#emailInputId");
    newPageElements.emailButton = document.querySelector("#emailButtonId");
    newPageElements.emailButtonGroup = document.querySelector("#emailButtonGroupId");
    newPageElements.emailError = document.querySelector("#emailErrorId");
    newPageElements.veriDiv = document.querySelector("#veriDivId");
    newPageElements.veriInput = document.querySelector("#veriInputId");
    newPageElements.prizeButton = document.querySelector("#prizeButtonId");
    newPageElements.prizeButtonDiv = document.querySelector("#prizeButtonDivId");
    newPageElements.refreshButton = document.querySelector("#refreshButtonId");
    newPageElements.refreshButtonDiv = document.querySelector("#refreshButtonDivId");
    newPageElements.recaptchaBlock = document.getElementsByClassName("g-recaptcha")[0];
    newPageElements.recaptchaError = document.querySelector("#recaptchaErrorId");
  }

  // modules/useApi.js
  async function sendVerificationEmail(userEmail = "", entryGuid = "") {
    const data = { "email": userEmail };
    const response = await fetch("https://www.lucozade.com/cgi-bin/app/instant-win-api.pl/send-verification-email", {
      method: "POST",
      headers: {
        "X-Entry-Guid": entryGuid
      },
      body: JSON.stringify(data)
    });
    return await response.json();
  }
  async function getPrize(data = {}, entryGuid = "") {
    const headers = {
      "X-Entry-Guid": entryGuid,
      "X-Competition-Group": "primary",
      "X-Competition-Guid": "407dd5bb-c08d-11ec-97c3-2ea081ad199a"
    };
    const opocode = { "code": "4066" };
    const answers = { "answers": [{ "questionGuid": "cb70506e-c6cc-11ec-aa00-def30f344eb8", "answerGuid": "e6785d47-c6cf-11ec-96eb-36d66aa4cbd4" }] };
    await fetch("https://www.lucozade.com/cgi-bin/app/instant-win-api.pl/initial-data", {
      method: "POST",
      headers,
      body: JSON.stringify(data)
    });
    await fetch("https://www.lucozade.com/cgi-bin/app/instant-win-api.pl/opocode", {
      method: "POST",
      headers,
      body: JSON.stringify(opocode)
    });
    await fetch("https://www.lucozade.com/cgi-bin/app/instant-win-api.pl/answers", {
      method: "POST",
      headers,
      body: JSON.stringify(answers)
    });
    const response = await fetch("https://www.lucozade.com/cgi-bin/app/instant-win-api.pl/draw-entry-prizes", {
      headers
    });
    await fetch("https://www.lucozade.com/cgi-bin/app/instant-win-api.pl/perform-draw", {
      headers
    });
    await fetch("https://www.lucozade.com/cgi-bin/app/instant-win-api.pl/end-entry", {
      method: "POST",
      headers
    });
    return await response.json();
  }

  // app.js
  console.warn("App starting...");
  function main() {
    if (!sessionStorage.getItem(entryGuidKey)) {
      throw Error("No entry GUID found in local storage, aborting.");
    } else {
      let handleEmail = function(userEmail2) {
        if (userEmail2) {
          console.log("Sending verification email to:");
          console.log(userEmail2);
          sendVerificationEmail(userEmail2, entryGuid).then((data) => {
            console.log(data);
            if (data.success) {
              newPageElements.emailError.style.display = "none";
              newPageElements.emailButtonGroup.style.display = "none";
              newPageElements.veriDiv.style.display = "block";
              newPageElements.veriDiv.addEventListener("input", handleVeri);
            } else {
              console.warn("Email address error");
              newPageElements.emailError.style.display = "block";
              newPageElements.emailError.textContent = data.errors[0].message ? data.errors[0].message : "There was an error with the email address";
            }
            ;
          });
        } else {
          console.warn("No email address entered");
          newPageElements.emailError.style.display = "block";
          newPageElements.emailError.textContent = "Enter an email address you doofus";
        }
        ;
      }, handleVeri = function() {
        veriCode = newPageElements.veriInput.value;
        if (veriCode.length == 6) {
          console.log("Verification code accepted: " + veriCode);
          newPageElements.recaptchaBlock.style.display = "block";
          newPageElements.prizeButtonDiv.style.display = "block";
          newPageElements.prizeButton.addEventListener("click", handlePrize);
        }
        ;
      }, showPrizes = function(prizes) {
        const elements2 = [
          newPageElements.emailDiv,
          newPageElements.emailButton,
          newPageElements.emailButtonGroup,
          newPageElements.veriDiv,
          newPageElements.recaptchaBlock,
          newPageElements.prizeButtonDiv
        ];
        for (const element of elements2) {
          element.style.display = "none";
        }
        ;
        newPageElements.pageHeading.textContent = "You're always a winner in my eyes ;)";
        for (const prize of prizes) {
          var date = new Date(prize.wonDate);
          let prizeItemHtml = `<div class="lz-campaign-xbox-prize-item">
                        <div class="lz-campaign-xbox-prize-type"><b>Prize:</b> <var>${prize.subTitle}</var></div>
                        <div class="lz-campaign-xbox-prize-date"><b>Date:</b> <var>${date.toLocaleString("en-GB")}</var></div>
                        <div class="lz-campaign-xbox-prize-code"><var>${prize.itemDetail}</var></div>
                        <div class="button-group margin-top" style="grid-template-columns: 1fr;">
                            <div data-type="redeem" class="infx-button">
                                <a href="https://www.halowaypoint.com/sign-in?path=/redeem%3Fcode=${prize.itemDetail}" target="_blank" class="block-link">
                                    <span class="button-text">Redeem</span> <span class="button-icon"></span>
                                </a>
                            </div>
                        </div>
                    </div>`;
          newPageElements.pageFormContainerDiv.insertAdjacentHTML("afterbegin", prizeItemHtml);
        }
        ;
        sessionStorage.clear();
        newPageElements.refreshButtonDiv.style.display = "block";
        newPageElements.refreshButton.addEventListener("click", function() {
          window.location.reload();
        });
      };
      let userEmail;
      let veriCode;
      const entryGuid = sessionStorage.getItem(entryGuidKey);
      console.log("Found an entry GUID: " + entryGuid);
      formatPage();
      newPageElements.emailInput.addEventListener("keydown", function(e) {
        if (e.key === "Enter") {
          userEmail = e.target.value;
          handleEmail(userEmail);
        }
      });
      newPageElements.emailButton.addEventListener("click", function() {
        userEmail = newPageElements.emailInput.value;
        handleEmail(userEmail);
      });
      ;
      ;
      async function handlePrize() {
        if (!document.querySelector("#g-recaptcha-response").value) {
          console.warn("No token");
          newPageElements.recaptchaError.style.display = "block";
        } else {
          newPageElements.pageFormContainerDiv.style.opacity = "0.3";
          newPageElements.recaptchaError.style.display = "none";
          let dataToSend = entryData;
          let recaptchaToken = document.querySelector("#g-recaptcha-response");
          dataToSend.contactDetails.email = userEmail;
          dataToSend.recaptchaToken = recaptchaToken.value;
          dataToSend.verificationCode = veriCode;
          try {
            getPrize(dataToSend, entryGuid).then((response) => {
              console.log(response);
              newPageElements.pageFormContainerDiv.style.opacity = "1";
              if (response.success && response.data.prizes) {
                showPrizes(response.data.prizes);
              } else if (response.errors[0].code == "NoMoreEntriesToday") {
                throw Error("You've reached your limit for this email address");
              } else {
                throw Error("No prizes to show, check above fetch() response");
              }
              ;
            });
          } catch (e) {
            console.error(e);
          }
          ;
        }
        ;
      }
      ;
      ;
    }
    ;
  }
  main();
})();
